				section
					section
						h1 
							p Qualities of 
							p Testable Code
						h2
							ol 
								li Clear intent
								li Distinct components
								li Decoupled interactions
								li Isolated dependencies
					section
						h2 Steps To Improve Previous Example
						ol
							li 
								| Seperate code into components
								ul
									li List
									li Form
									li Talk (behavior)
							li Isolate jQuery dependency from behavior
							li Seperate the 'what' from the 'how' 
					section
						h3 List Component
						pre: code(style="width:100%; height: 550px").
							var List = function() {
								var $list = $( "#list" );
								
								return {
									add: function( title, speaker ) {
										var $dt = $( "&lt;dt&gt;" + title + "&lt;/dt&gt;" );
										var $dd = $( "&lt;dd&gt;" + speaker + "&lt;/dd&gt;" );
										$list.append( $dt );
										$list.append( $dd );
									},
									getTitles: function() {
										return $list
												.find( "dt" )
												.map( function() { return $(this).text(); } )
												.get();
									}
								};
							};
					section
						h3 Form Component
						pre: code(style="width:100%; height: 550px").
							var Form = function() {
								var $title = $( "#title" ),
									$speaker = $el.find( "#speaker" ),
									$add = $el.find( "#add" );
								
								return {
									clear: function() {
										this.setTitle( "" );
										this.setSpeaker( "" );
										this.disableAdd();            
									},
									getTitle: function() { return $title.val().trim(); },
									setTitle: function( value ) { $title.val( value ); },
									whenTitleChange: function( handler ) { 
										$title.on( "keyup", handler ); 
									},
									getSpeaker: function() { return $speaker.val().trim(); },
									setSpeaker: function( value ) { $speaker.val( value ); },
									whenSpeakerChange: function( handler ) { 
										$speaker.on( "keyup", handler );
									},
									disableAdd: function() { $add.attr("disabled","disabled"); },
									enableAdd: function() { $add.removeAttr("disabled"); },
									whenAdd: function( handler ) { 
										$add.on( "click", handler ); 
									}
								};
							};					
					section
						h3 Talk Component
						pre: code(style="width:100%; height: 550px").
							var Talk = function( list, form ) {
								var addItem = function() {
									list.add( form.getTitle(), form.getSpeaker() );
									form.clear();
								};

								var validateForm = function() {
									var newTitle = form.getTitle(),
										newSpeaker = form.getSpeaker(),
										blankTitle = newTitle === "" || !newTitle,
										blankSpeaker = newSpeaker === "" || !newSpeaker,
										duplicate = _.any( list.getTitles(), function( title ) {
											return title === newTitle;
										} );
									if( duplicate || blankTitle || blankSpeaker) {
										form.disableAdd();
									} else {
										form.enableAdd();
									}
								};

								form.whenAdd( "click", addItem );
								form.whenTitle( "keyup", validateForm );
								form.whenSpeaker( "keyup", validateForm );
							};
					section
						h2 Demo
						iframe(style="width: 900px; height: 500px",src="/testable/",allowfullscreen="allowfullscreen",frameborder="0")
					section
						div
							h2 The Bad
							ul
								li MOAR CODE: 71 LoC ( almost a 100% increase )
							br
							br
							div.fragment
								blockquote itâ€™s no sin to trade key strokes, which are cheap, for clarity, which is precious
								p: small Garret Smith a.k.a The Smartest Developer Alive
					section
						h2 The Good
						ul
							li 
								h3 Decoupled
								ul
									li Distinct components
									li Isolated dependencies	
							li
								h3 Clear
								ul
									li Clear responsibilities
							li
								h3 Maintainable
								ul
									li Changes isolated by component